// Slider -------------------------\
// Width: slider takes 100% of his parent's width
// --slider-value: must be updated by JS !! (& be unitless !!!)

@mixin track() {
    box-sizing: border-box;
    border: none;
    border-radius: calc(var(--track-height) / 2);
    inline-size: 100%;
    block-size: var(--track-height);
    background: var(--track-inactive);
    background-image: linear-gradient(90deg, var(--track-active), var(--track-active));
    background-size: calc(var(--slider-value, 0) * 1%) var(--track-height); // explicit  height: bug in Safari otherwise
    background-repeat: repeat-y;
    box-shadow: 0 0 calc(var(--track-height) / 2) rgba(0, 0, 0, .125) inset;
}

@mixin thumb() {
    box-sizing: border-box;
    border: none;
    inline-size: var(--thumb-size);
    block-size: var(--thumb-size);
    border-radius: 50%;
    background: var(--track-active);
    box-shadow: 0 0 0 var(--highlight-size) var(--thumb-highlight);
    transition: box-shadow var(--slider-anim-dur) var(--slider-anim-fn);
}

.slider {
    --thumb-size: 1rem;
    --track-height: calc(var(--thumb-size) / 4);
    --highlight-size: calc(var(--thumb-size) / 8);

    // ----------------------------- Colors
    --clr: hsl(209 60% 50%); // Primary color (for reference)
    --slider-h: 209;
    --slider-s: 60%;
    --slider-l: 50%;

    --track-active: hsl(var(--slider-h) var(--slider-s) var(--slider-l));
    --track-inactive: hsl(0 0% 80%);

    --thumb-highlight: hsl(0 0% 0% / .25);

    @media (prefers-color-scheme: dark) {
        --track-active: hsl(var(--slider-h) var(--slider-s) calc(var(--slider-l) - 15%));
        --track-inactive: hsl(0 0% 65%);

        --thumb-highlight: hsl(0 0% 100% / .25);
    }

    // ----------------------------- Animation
    --slider-anim-dur: .2s;
    --slider-anim-fn: ease-out;

    // ----------------------------- Layout
    display: flex;
    align-items: center;
    justify-content: flex-end;
    gap: .5rem; // distance between Swith & Label

    position: relative;

    &.label {
        &-right {
            flex-direction: row-reverse;
        }

        &-above {
            flex-direction: column;
        }

        &-under {
            flex-direction: column-reverse;
        }
    }

    & [type="range"] {

        &,
        &::-webkit-slider-thumb {
            appearance: none;
            -webkit-appearance: none;
        }

        flex: 1;
        margin: 0;
        padding: 0;
        width: 100%;
        min-height: var(--thumb-size);
        background: transparent;
        font: inherit;

        &::-webkit-slider-runnable-track {
            @include track();
        }

        &::-moz-range-track {
            @include track;
        }

        &::-ms-track {
            @include track;
        }

        &::-webkit-slider-thumb {
            margin-top: calc((var(--track-height) - var(--thumb-size)) / 2);
            @include thumb;
        }

        &::-moz-range-thumb {
            @include thumb;
        }

        &::-ms-thumb {
            margin-top: 0;
            @include thumb;
        }

        &::-ms-tooltip {
            display: none;
        }

        &:not(:disabled):hover {
            --highlight-size: calc(var(--thumb-size) / 2);
            cursor: pointer;
        }
    }

    // Output
    & output {
        --__clr: deeppink;
        background: var(--__clr);
        min-width: max-content;
        padding: .25em .5em;
        position: absolute;
        // Make sure that the center of the output is always under the center of the thumb (it's a kind of lerp)
        left: calc(var(--slider-value) * 1% + (50 - var(--slider-value))/100*var(--thumb-size));
        bottom: -100%;
        translate: -50% 0;
        border-radius: .25em;
        pointer-events: none;

        &:before {
            // conic gradient for the arrow
            --__theta: 45deg;
            position: absolute;
            content: "";
            width: 100%;
            height: 50%;
            background-image: conic-gradient(from calc(180deg - var(--__theta)) at 50% 0,
            var(--__clr) calc(var(--__theta) * 2),
            transparent 0);
            top: -0.25em;
            left: 0;
            z-index: -1;
        }
    }

    &.label-under output {
        top: -100%;
        bottom: initial;
        &:before {
            background-image: conic-gradient(from calc(-1 * var(--__theta)) at 50% 100%,
            var(--__clr) calc(var(--__theta) * 2),
            transparent 0);
            top: initial;
            bottom: -0.25em;
        }
    }
}