/*** ---- Components' global variables & properties ---- ***/
:root {
    // ----------------------------- Colors
    --clr: hsl(209 60% 50%); // Primary color
    --h: 209;
    --s: 60%;
    --l: 50%;
    --hsl: var(--h) var(--s) var(--l);
    --clr-active: hsl(var(--hsl));
    --clr-inactive-bdr: hsl(0 0% 50%);
    --clr-inactive-bg: hsl(0 0% 85%);
    --clr-outline: color-mix(in srgb, var(--clr-active), white);
    --outline-width: .25em; // "fake" outline's width (box-shadow in fact)
    --clr-highlight: hsl(var(--hsl) / .25);


    @media (prefers-color-scheme: dark) {
        --clr-active: hsl(var(--h) var(--s) calc(var(--l) - 15%));
        --clr-inactive-bg: hsl(0 0% 35%);
        --clr-outline: color-mix(in srgb, var(--clr-active) 75%, white);
        --clr-highlight: hsl(0 0% 100% / .33);
    }
}

.agf-component {
    // ----------------------------- Animation
    --anim-dur: .2s;
    --anim-fn: ease-out;

    &:is(button),
    & :is(input, select, textarea){

        &:focus:not(:focus-visible) {
            // disable the default outline on a focused element which doesnâ€™t have the :focus-visible state (-> button after a mouse click)
            outline-color: transparent;
            outline-width: 0;
        }

        &:focus-visible {
            box-shadow: 0 0 0 var(--outline-width) var(--clr-outline);
            outline-width: 0;
        }
    }


    // &:not(:disabled):hover,
    // &:not(:disabled):not([readonly]):hover,
    // & :not(:disabled):hover {
    //     cursor: pointer;
    // }

    & > :not(:disabled):is(:read-write):hover  {
        cursor: initial;
    }

    &:disabled:hover,
    & :disabled:hover {
        cursor: not-allowed;
    }

    &.label-right {
        flex-direction: row-reverse;
    }

    &.label-above {
        flex-direction: column;
    }

    &.label-under {
        flex-direction: column-reverse;
    }
}

@media (prefers-reduced-motion: reduce) {
    .agf-component {
        --anim-dur: 0; // no transition
    }
}